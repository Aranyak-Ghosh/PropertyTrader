DROP TABLE TRANSACTIONS;
DROP TABLE REVIEWS;
DROP TABLE PROPERTY;
DROP TABLE PROPERTYTYPES;
DROP TABLE USERS;

create table USERS(
    USERNAME VARCHAR(20) PRIMARY KEY,
    HASHPASS VARCHAR(50) NOT NULL,
    FULL_NAME VARCHAR(50) NOT NULL,
    EID VARCHAR(20),
    CONTACTNO VARCHAR(13) NOT NULL,
    P_ADDRESS VARCHAR(100),
    EMAIL VARCHAR(50) NOT NULL,
    BANKCARD_INFO VARCHAR(20)
);

create table PROPERTYTYPES(
    TYPEID INT PRIMARY KEY,
    TYPENAME VARCHAR(50)
);

create table PROPERTY(
    TYPEID INT NOT NULL,
    AREA VARCHAR(50) NOT NULL,
    ORIGINYEAR INT NOT NULL,
    BATHROOMS INT NOT NULL,
    BEDROOMS INT NOT NULL,
    PROPERTY_ID INT PRIMARY KEY,
    PRICE INT NOT NULL,
    PICTURES VARCHAR(100) NOT NULL,
    OWNED_BY VARCHAR(20) NOT NULL,
    AVAILABLE INT NOT NULL,
    FOREIGN KEY (OWNED_BY) REFERENCES USERS(USERNAME),
    FOREIGN KEY (TYPEID) REFERENCES PROPERTYTYPES(TYPEID) 
);

ALTER TABLE PROPERTY
ADD CONSTRAINT PROPERTY_AVAILABILITY_RANGE
CHECK (AVAILABLE>=0 AND AVAILABLE<=1);

create table TRANSACTIONS(
	PROPERTY_ID INT NOT NULL,
	TRANSACTION_ID INT NOT NULL PRIMARY KEY,
	BUYER_NAME VARCHAR(20) NOT NULL,
	SELLER_NAME VARCHAR(20) NOT NULL,
	FOREIGN KEY (PROPERTY_ID) REFERENCES PROPERTY(PROPERTY_ID),
	FOREIGN KEY (BUYER_NAME) REFERENCES USERS(USERNAME),
	FOREIGN KEY (SELLER_NAME) REFERENCES USERS(USERNAME)
);

create table REVIEWS(
	REVIEW VARCHAR(200) NOT NULL,
	RATING INT NOT NULL,
	AUTHOR VARCHAR(20) NOT NULL,
	REVIEW_ID INT PRIMARY KEY,
	PROPERTY_ID INT NOT NULL,
    FOREIGN KEY (AUTHOR) REFERENCES USERS(USERNAME),
    FOREIGN KEY (PROPERTY_ID) REFERENCES PROPERTY(PROPERTY_ID)
);

insert into PROPERTYTYPES (TYPEID, TYPENAME) values (1,'Bunglow');
insert into PROPERTYTYPES (TYPEID, TYPENAME) values (2,'Apartment');
insert into PROPERTYTYPES (TYPEID, TYPENAME) values (3,'Plot');
